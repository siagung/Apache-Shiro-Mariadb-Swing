package com.mkl.myshiro;

import javax.swing.JOptionPane;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authz.AuthorizationException;
import org.apache.shiro.session.Session;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.crypto.hash.Sha256Hash;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author agung
 */
public class testForm extends javax.swing.JFrame {

    private static final Logger log = LoggerFactory.getLogger(testForm.class);
    private static final long serialVersionUID = -4299087640201088650L;
    private Authenticator authenticator;
    private Subject currentUser;
    private Session session;

    /**
     * Creates new form testForm
     */
    public testForm() {

        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        btn01 = new javax.swing.JButton();
        btn02 = new javax.swing.JButton();
        btn03 = new javax.swing.JButton();
        btn04 = new javax.swing.JButton();
        btn05 = new javax.swing.JButton();
        btn06 = new javax.swing.JButton();
        btn07 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Shiro Test");

        jLabel1.setText("Username :");

        jLabel2.setText("Password :");

        btnLogin.setText("Login");
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btn01.setText("BTN 01");
        btn01.setEnabled(false);
        btn01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn01ActionPerformed(evt);
            }
        });

        btn02.setText("BTN 02");
        btn02.setEnabled(false);

        btn03.setText("BTN 03");
        btn03.setEnabled(false);

        btn04.setText("BTN 04");
        btn04.setEnabled(false);

        btn05.setText("BTN 05");
        btn05.setEnabled(false);
        btn05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn05ActionPerformed(evt);
            }
        });

        btn06.setText("BTN 06");
        btn06.setEnabled(false);

        btn07.setText("BTN 07");
        btn07.setEnabled(false);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn01)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn02)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn03)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn04)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn05)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn06)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn07)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                            .addComponent(txtUsername)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(492, 492, 492)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogin)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn01)
                    .addComponent(btn02)
                    .addComponent(btn03)
                    .addComponent(btn04)
                    .addComponent(btn05)
                    .addComponent(btn06)
                    .addComponent(btn07))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed

        if (btnLogin.getText().equals("Login")) {
            String userName = txtUsername.getText();
            String password = txtPassword.getText();

            authenticator = new Authenticator();

            currentUser = authenticator.authenticate(userName, password);

            if (currentUser.isAuthenticated()) {
                session = currentUser.getSession();

                //Storing some attributes
                session.setAttribute("Connected", "yes");

                //Retrieving attributes later on 
                String attribute = session.getAttribute("Connected").toString();

                System.out.println("Connected : " + attribute);
                btnLogin.setText("Logout");
                //txtUsername.setEnabled(false);
                //txtPassword.setEnabled(false);
                JOptionPane.showMessageDialog(rootPane, "Login Success!!!");
                getCurrentUser();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Could not authenticate user");
                //System.out.println("Could not authenticate user");
            }
        } else {
            currentUser = SecurityUtils.getSubject();
            currentUser.logout();
            btnLogin.setText("Login");
            txtUsername.setEnabled(true);
            txtPassword.setEnabled(true);
            btn01.setEnabled(false);
            btn02.setEnabled(false);
            btn03.setEnabled(false);
            btn04.setEnabled(false);
            btn05.setEnabled(false);
            btn06.setEnabled(false);
            btn07.setEnabled(false);
            JOptionPane.showMessageDialog(rootPane, "Logout Success!!!");
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btn01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn01ActionPerformed
        System.out.println(new Sha256Hash(txtPassword.getText(), txtUsername.getText(), 1024).toBase64());
    }//GEN-LAST:event_btn01ActionPerformed

    private void btn05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn05ActionPerformed
          System.out.println(new Sha256Hash(txtPassword.getText(), txtUsername.getText(), 1024).toBase64());
    }//GEN-LAST:event_btn05ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         System.out.println(new Sha256Hash(txtPassword.getText(), txtUsername.getText(), 1024).toBase64());
    }//GEN-LAST:event_jButton1ActionPerformed

    public void getCurrentUser() {
        currentUser = SecurityUtils.getSubject();

        if (currentUser.isAuthenticated()) {
            System.out.println(currentUser.getPrincipal().toString() + " : Auht Oke");
            String mail = (String) currentUser.getSession().getAttribute("username");

            System.out.println(mail);
            //System.out.println("authrn");

            // throws UnauthorizedException if the user has no permission
            //currentUser.checkPermission("admin:access");
            try {

                if (currentUser.hasRole("admin")) {
                    btn01.setEnabled(true);
                    btn02.setEnabled(true);
                    btn03.setEnabled(true);
                    btn04.setEnabled(true);
                    btn05.setEnabled(true);
                    btn06.setEnabled(true);
                    btn07.setEnabled(true);
                } else            
                  if (currentUser.hasRole("sp")) {
                    btn01.setEnabled(true);
                    btn02.setEnabled(true);
                    btn03.setEnabled(true);
                    btn04.setEnabled(false);
                    btn05.setEnabled(false);
                    btn06.setEnabled(false);
                    btn07.setEnabled(false);
                } else if (currentUser.hasRole("op")) {
                    btn01.setEnabled(false);
                    btn02.setEnabled(false);
                    btn03.setEnabled(false);
                    btn04.setEnabled(false);
                    btn05.setEnabled(true);
                    btn06.setEnabled(true);
                    btn07.setEnabled(true);
                } else {
                    btn01.setEnabled(false);
                    btn02.setEnabled(false);
                    btn03.setEnabled(false);
                    btn04.setEnabled(false);
                    btn05.setEnabled(false);
                    btn06.setEnabled(false);
                    btn07.setEnabled(false);
                }

//                if (currentUser.hasRole("TB")) {
//                    System.out.println("has role TB");
//                    btn01.setEnabled(true);
//                } else {
//                    System.out.println("has no role");
//                }
//                if (currentUser.isPermitted("user:read")) {
//                    btn02.setEnabled(true);
//                } else {
//                    System.out.println("User is NOT permitted to read");
//                }
//                if (currentUser.isPermitted("user:delete")) {
//                    btn03.setEnabled(true);
//                } else {
//                    System.out.println("User is NOT permitted to delete");
//                }
//                if (currentUser.isPermitted("user:write")) {
//                    btn04.setEnabled(true);
//                } else {
//                    System.out.println("User is NOT permitted to write");
//                }
//                if (currentUser.isPermitted("branch:write")) {
//                    btn05.setEnabled(true);
//                } else {
//                    System.out.println("User is NOT permitted to write branch");
//                }
//                if (currentUser.isPermitted("branch:read")) {
//                    btn06.setEnabled(true);
//                } else {
//                    System.out.println("User is NOT permitted to read branch");
//                }
//                if (currentUser.isPermitted("branch:delete")) {
//                    btn07.setEnabled(true);
//                } else {
//                    System.out.println("User is NOT permitted to delete branch");
//                }
            } catch (AuthorizationException ae) {
                System.out.println("AuthorizationException ERR : " + ae);
            }

        } else {
            System.out.println("not authen");
        }
    }

//    public String getUserByEmail(String email) {
//    //Session session = HibernateUtil.getCurrentSession();
//    //session.beginTransaction();
//    //User user = (User) session.createQuery("from User where email=?").setString(0, email).uniqueResult();
//    //session.getTransaction().commit();
//    //return email;
//  }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(testForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(testForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(testForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(testForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new testForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn01;
    private javax.swing.JButton btn02;
    private javax.swing.JButton btn03;
    private javax.swing.JButton btn04;
    private javax.swing.JButton btn05;
    private javax.swing.JButton btn06;
    private javax.swing.JButton btn07;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
